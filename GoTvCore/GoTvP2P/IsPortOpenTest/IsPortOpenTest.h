#pragma once
//============================================================================
// Copyright (C) 2014 Brett R. Jones 
// Issued to MIT style license by Brett R. Jones in 2017
//
// You may use, copy, modify, merge, publish, distribute, sub-license, and/or sell this software 
// provided this Copyright is not modified or removed and is included all copies or substantial portions of the Software
//
// This code is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
//
// brett.jones@engineer.com
// http://www.gotvptop.net
//============================================================================

#include "PingResponseServer.h"

#include <GoTvInterface/IToGui.h>

#include <CoreLib/VxThread.h>
#include <CoreLib/VxMutex.h>

class P2PEngine;
class EngineSettings;
class VxSktConnectSimple;
class NetworkMgr;
class NetServicesMgr;
class NetServiceUtils;

class IsPortOpenTest 
{
public:
	IsPortOpenTest( P2PEngine& engine, IToGui& toGui, EngineSettings& engineSettings, NetServicesMgr& netServicesMgr, NetServiceUtils& netServiceUtils );
	virtual ~IsPortOpenTest();


	virtual void				fromGuiRunIsPortOpenTest( uint16_t port );
	void						isPortOpenShutdown( void );

	void						doIsPortOpenTest( void );
	void						handleTcpData( VxSktBase * sktBase );

private:
	void						startPingResponse( void );
	void						stopPingResponse( void );
	void						startIsPortOpenThread( void );
	const char *				getTestName( bool isAnchor );
	void						sendTestStatus( EIsPortOpenStatus eStatus, const char * msg, ... );
	void						sendTestLog( const char * msg, ... );

	EIsPortOpenStatus			doConnectionTest( std::string& nodeUrl, bool isAnchor );
	EIsPortOpenStatus			doConnectTestFailed( bool isAnchor );
	EIsPortOpenStatus			doConnectTestSuccess( bool isAnchor );
	void						doTestShutdown( void );

	//=== vars ===//
	P2PEngine&					m_Engine;
	IToGui&						m_ToGui;
	EngineSettings&				m_EngineSettings;
	NetServicesMgr&				m_NetServicesMgr;
	NetServiceUtils&			m_NetServiceUtils;
	PingResponseServer			m_PingResponseServer;
	VxThread					m_IsPortOpenThread;
	uint16_t							m_Port;	

private:
	IsPortOpenTest(); // don't allow default constructor
	IsPortOpenTest(const IsPortOpenTest&); // don't allow copy constructor
};

